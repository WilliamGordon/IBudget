@model ibudget.mvc.Models.ViewModel.DashboardBudgetComplexeModel
@inject IJsonHelper Json;
@{
    ViewData["Title"] = "Details";
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    // GetDataTransaction
    var transaction = JSON.parse(JSON.stringify(@Json.Serialize(Model.Transactions)));
        console.log(transactionJson);

    google.load("visualization", "1", {
        packages: ["corechart"]
    });
    google.setOnLoadCallback(initChartCategpry);
    google.setOnLoadCallback(initChartExpense);

    $(window).on("throttledresize", function (event) {
        initChartCategpry();
        initChartExpense();
    });

    function initChartCategpry() {


        var options = {
            legend: 'none',
            width: '100%',
            height: '100%',
            pieSliceText: 'percentage',
            colors: ['#0598d8', '#f97263'],
            chartArea: {
                left: "3%",
                top: "3%",
                height: "94%",
                width: "94%"
            }
        };
        

        var data = google.visualization.arrayToDataTable([
            ['Gender', 'Overall'],
            ['M', 110],
            ['M', 40],
            ['F', 20]
        ]);
        drawChartCategory(data, options)
    }
    function initChartExpense() {

        var data = google.visualization.arrayToDataTable([
            ['Month', 'Income', 'Expenses'],
            ['January', 1000, 400],
            ['February', 1170, 460],
            ['March', 660, 1120],
            ['March', 660, 1120],
        ]);

        var options = {
            legend: 'none',
            width: '100%',
            height: '100%',
            title: 'Company Performance',
            curveType: 'function',
            legend: { position: 'bottom' },
            chartArea: {
                left: "10%",
                top: "10%",
                height: "85%",
                width: "85%"
            }
        };
        drawChartExpense(data, options)
    }

    function drawChartCategory(data, options) {
        var chart = new google.visualization.PieChart(document.getElementById('chart_category'));
        chart.draw(data, options);
    }

    function drawChartExpense(data, options) {
        var chart = new google.visualization.LineChart(document.getElementById('chart_expense'));
        chart.draw(data, options);
    }
</script>
<style>
    @@media only screen and (min-width : 1200px) {
        .container {
            max-width: 1500px;
        }
    }

    #chart_wrap_category {
        border: 1px solid gray;
        position: relative;
        padding-bottom: 100%;
        height: 0;
        overflow: hidden;
    }

    #chart_category {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    #chart_wrap_expense {
        border: 1px solid gray;
        position: relative;
        padding-bottom: 100%;
        height: 0;
        overflow: hidden;
    }

    #chart_expense {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
</style>
<div class="card">
    <div class="card-body">
        <h5 class="card-title">@Model.Budget.Name</h5>
        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
    </div>
</div>
<div class="card-deck mt-3">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Income/Expense chart</h5>
            <div id="chart_wrap_expense"><div id="chart_expense"></div></div>
        </div>
        <div class="card-footer">
            <small class="text-muted">Last updated 3 mins ago</small>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Spending by category</h5>
            <div id="chart_wrap_category"><div id="chart_category"></div></div>
        </div>
        <div class="card-footer">
            <small class="text-muted">Last updated 3 mins ago</small>
        </div>
    </div>
</div>
<div class="card-deck mt-3">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Transactions</h5>
            <div class="table-responsive">
                <table class="table table-sm table-hover">
                    <thead>
                        <tr>
                            <th>Amount</th>
                            <th>Date</th>
                            <th>Message</th>
                            <th>Category</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Transaction != null)
                        {
                            @foreach (var item in Model.Transactions)
                            {
                                <tr style="cursor: pointer;" onclick="window.location='#';">
                                    <td>@item.Amount</td>
                                    <td>@item.Date</td>
                                    <td>@item.Message</td>
                                    @{
                                        var category = Model.Categories.SingleOrDefault(c => c.Id == item.CategoryId);
                                        if (category != null)
                                        {
                                            <td>
                                                <p>@category.Name</p>
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#ModelAddCategory" onclick="$('#TransactionForEdit_Id').val('@item.Id'); $('#TransactionForEdit_CategoryId').val('@item.CategoryId');">
                                                    Edit Category
                                                </button>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <p>None</p>
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#ModelAddCategory" onclick="$('#TransactionForEdit_Id').val('@item.Id')">
                                                    Add Category
                                                </button>
                                            </td>
                                        }
                                    }
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer">
            <small class="text-muted">
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalAddTransaction">
                    New transaction
                </button>
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#ModelNewCategory">
                    New category
                </button>
            </small>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="ModalAddTransaction" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Adding a new budget</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="CreateTransaction">
                <div class="modal-body">
                    <div class="text-danger">
                        <p>
                            <ul id="errorListTransactionModal"></ul>
                            <script>
                                var obj = JSON.parse(@Json.Serialize(ViewBag.ErrorNotificationTransactionModal));
                                var ul = document.getElementById("errorListTransactionModal");
                                if (obj) {
                                    for (const key in obj.errors) {
                                        var li = document.createElement("li");
                                        li.appendChild(document.createTextNode(`${obj.errors[key]}`));
                                        ul.appendChild(li);
                                    }
                                }
                                    
                            </script>
                        </p>
                    </div>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.Amount" class="control-label"></label>
                        <input asp-for="@Model.Transaction.Amount" class="form-control" />
                        <input asp-for="@Model.Transaction.BudgetId" type="hidden" class="form-control" />
                        <span asp-validation-for="@Model.Transaction.Amount" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.Description" class="control-label"></label>
                        <input asp-for="@Model.Transaction.Description" class="form-control" />
                        <span asp-validation-for="@Model.Transaction.Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.CategoryId" class="control-label"></label>
                        <select asp-for="@Model.Transaction.CategoryId" asp-items="@Model.Transaction.Categories" class="browser-default custom-select">
                            <option value=""></option>
                        </select>
                        <span asp-validation-for="@Model.Transaction.CategoryId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.Date" class="control-label"></label>
                        <input asp-for="@Model.Transaction.Date" class="form-control" type='text' />
                        <span asp-validation-for="@Model.Transaction.Date" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.Transmitter" class="control-label"></label>
                        <input asp-for="@Model.Transaction.Transmitter" class="form-control" />
                        <span asp-validation-for="@Model.Transaction.Transmitter" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.Receiver" class="control-label"></label>
                        <input asp-for="@Model.Transaction.Receiver" class="form-control" />
                        <span asp-validation-for="@Model.Transaction.Receiver" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Transaction.Message" class="control-label"></label>
                        <input asp-for="@Model.Transaction.Message" class="form-control" />
                        <span asp-validation-for="@Model.Transaction.Message" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="ModelNewCategory" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Adding a new Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="CreateCategory">
                <div class="modal-body">
                    <div class="text-danger">
                        <p>
                            <ul id="errorListNewCategoryModal"></ul>
                            <script>
                                var obj = JSON.parse(@Json.Serialize(ViewBag.ErrorNotificationNewCategoryModal));
                                var ul = document.getElementById("errorListNewCategoryModal");
                                if (obj) {
                                    for (const key in obj.errors) {
                                        var li = document.createElement("li");
                                        li.appendChild(document.createTextNode(`${obj.errors[key]}`));
                                        ul.appendChild(li);
                                    }
                                }
                            </script>
                        </p>
                    </div>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="@Model.Category.Name" class="control-label"></label>
                        <input asp-for="@Model.Category.Name" class="form-control" />
                        <input asp-for="@Model.Category.BudgetId" type="hidden" class="form-control" />
                        <span asp-validation-for="@Model.Category.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="ModelAddCategory" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Adding a category for the transaction</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="EditTransactionCategory">
                <div class="modal-body">
                    <div class="text-danger">
                        <p>
                            <ul id="errorListAddCategoryModal"></ul>
                            <script>
                                var obj = JSON.parse(@Json.Serialize(ViewBag.ErrorNotificationAddCategoryModal));
                                var ul = document.getElementById("errorListAddCategoryModal");
                                if (obj) {
                                    for (const key in obj.errors) {
                                        var li = document.createElement("li");
                                        li.appendChild(document.createTextNode(`${obj.errors[key]}`));
                                        ul.appendChild(li);
                                    }
                                }
                            </script>
                        </p>
                    </div>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="@Model.TransactionForEdit.CategoryId" class="control-label"></label>
                        <select asp-for="@Model.TransactionForEdit.CategoryId" asp-items="@Model.Transaction.Categories" class="browser-default custom-select"></select>
                        <input asp-for="@Model.TransactionForEdit.Id" type="hidden" class="form-control" />
                        <input asp-for="@Model.TransactionForEdit.BudgetId" type="hidden" class="form-control" />
                        <span asp-validation-for="@Model.TransactionForEdit.CategoryId" class="text-danger"></span>
                    </div>
                    <div class="form-group">

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>


@if (!string.IsNullOrEmpty(ViewBag.ErrorNotificationTransactionModal))
{
    <script>
        $('#ModalAddTransaction').modal('show');
    </script>
}
<script>
    $(document).ready(function () {
        $('#Transaction_Date').datepicker();
    });
</script>

@if (!string.IsNullOrEmpty(ViewBag.ErrorNotificationNewCategoryModal))
{
    <script>
        $('#ModelNewCategory').modal('show');
    </script>
}

@if (!string.IsNullOrEmpty(ViewBag.ErrorNotificationAddCategoryModal))
{
    <script>
        $('#ModelAddCategory').modal('show');
    </script>
}
